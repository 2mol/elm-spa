module App.Route exposing
    ( Route
    , top
    , path
    , folder
    , dynamic, dynamicFolder
    )

{-|


# Routing

The [cli tool](https://github.com/ryannhg/elm-spa/tree/master/cli) is able to generate routes based on the folder
structure and files in the `src/Pages` folder.

If you're choosing to type out the routes manually, these are just
convenience functions for creating `Url.Parser` types for your application.

@docs Route

@docs top

@docs path

@docs slug

@docs folder

-}

import Url exposing (Url)
import Url.Parser as Parser exposing ((</>), Parser)


{-| Literally just a Url.Parser under the hood.
-}
type alias Route route a =
    Parser (route -> a) a


{-| A route for a path like. These are generated by other file names.

    Route.path "about-us" AboutUs

-}
path : String -> (() -> route) -> Route route a
path path_ toRoute =
    Parser.map toRoute (Parser.s path_ |> Parser.map ())


{-| A top level route.
Usually generated by an `Top.elm` file.

    Route.top Top

-}
top : (() -> route) -> Route route a
top toRoute =
    Parser.map toRoute (Parser.top |> Parser.map ())


{-| A dynamic route, that passes the `String` value.
Usually generated by an `Dynamic.elm` file.

    Route.dynamic Dynamic

-}
dynamic : (String -> route) -> Route route a
dynamic toRoute =
    Parser.map toRoute Parser.string


{-| A route for nested routes, generated by a folder.

    Route.folder "settings" Settings_ Generated.Settings.Route.routes

-}
folder :
    String
    -> (subRoute -> route)
    -> List (Route subRoute route)
    -> Route route a
folder path_ toRoute children =
    Parser.map toRoute
        (Parser.s path_ </> Parser.oneOf children)


{-| A route for nested dynamic routes, generated by a folder.

    Route.dynamicFolder Dynamic_ Dynamic_.routes

-}
dynamicFolder :
    (String -> subRoute -> route)
    -> List (Route subRoute route)
    -> Route route a
dynamicFolder toRoute children =
    Parser.map toRoute
        (Parser.string </> Parser.oneOf children)
